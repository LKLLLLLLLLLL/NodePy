version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: nodepy-postgresql
    environment:
      POSTGRES_DB: nodepy
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: nodepy-redis
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
  
  minio:
    image: minio/minio:latest
    container_name: nodepy-minio
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_CONSOLE_ADDRESS: ":9001"
    command: server /data

  server:
    build:
      context: ..
      dockerfile: infra/docker/server.Dockerfile
      target: production
    container_name: nodepy-server
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/nodepy
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - DEBUG=false
    depends_on:
      - postgres
      - redis
      - celery-worker

  celery-worker:
    build:
      context: ..
      dockerfile: infra/docker/server.Dockerfile
      target: production
    container_name: nodepy-celery-worker
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/nodepy
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - DEBUG=false
    depends_on:
      - postgres
      - redis
    command: ["uv", "run", "celery", "-A", "server.celery", "worker", "--loglevel=info"]

volumes:
  postgres_data:
  redis_data_prod:
  minio_data: